version: '3.3'
services:

  #App Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 28080:8080
    image: digitalocean.com/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Admin Service
  admin:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 28081:8081
    image: digitalocean.com/php
    container_name: admin
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: admin
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "8080:8080"
      - "8081:8081"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: burger-point-db
      MYSQL_ROOT_PASSWORD: root
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  #Redis Service
  redis:
    image: redis:6.2-alpine
    container_name: redis
    restart: unless-stopped
    tty: true
    command: redis-server
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
  redis-data:
    driver: local
